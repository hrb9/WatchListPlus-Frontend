name: main-pipeline

permissions:
  contents: read
  security-events: write
  packages: write
  actions: write # הוסף הרשאות actions

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: CodeQL Init
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: CodeQL Analyze
        uses: github/codeql-action/analyze@v3

      - name: Bump version
        id: bump
        run: |
          chmod +x scripts/bump_version.sh
          newver=$(./scripts/bump_version.sh | grep "New version" | awk '{print $3}')
          echo "version=$newver" >> $GITHUB_OUTPUT

      - name: AI Summary
        run: |
          echo "AI Summary: (Mock) Summarizing changes in main..."
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Login to GHCR for Buildx # הוסף login מיוחד עבור buildx
        run: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build Docker Images for Multiple Architectures
        run: |
          REPO=$(echo "hrb9/WatchListPlus-Frontend" | tr '[:upper:]' '[:lower:]')
          REPO=$(echo "hrb9/WatchListPlus-Frontend" | tr '[:upper:]' '[:lower:]')
          VERSION=${{ steps.version.outputs.VERSION_SHORT }}
          echo "Building image for amd64..."
          docker buildx build --platform linux/amd64 --load --build-arg BUILDPLATFORM=linux/amd64 -t ghcr.io/$REPO:main-${VERSION}-amd64 .
          echo "Building image for arm64..."
          docker buildx build --platform linux/arm64 --load --no-cache --build-arg BUILDPLATFORM=linux/arm64 -t ghcr.io/$REPO:main-${VERSION}-arm64 . # הוספנו --no-cache כאן
          echo "Creating multi-architecture manifest image and pushing..."
          docker buildx build --platform linux/amd64,linux/arm64 --push -t ghcr.io/$REPO:main-${VERSION} .
          echo "Tagging multi-arch image as latest..."
          docker tag ghcr.io/$REPO:main-${VERSION} ghcr.io/$REPO:latest



      - name: Login to GHCR # Login סטנדרטי לפני push
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker Images
        run: |
          REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          VERSION=${{ steps.bump.outputs.version }}

          docker push ghcr.io/$REPO:main-${VERSION}-amd64
          docker push ghcr.io/$REPO:main-${VERSION}-arm64
          docker push ghcr.io/$REPO:main-${VERSION}
          docker push ghcr.io/$REPO:latest
