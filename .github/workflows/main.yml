name: main-pipeline

permissions:
  contents: read
  security-events: write    
  packages: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: CodeQL Init
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: CodeQL Analyze
        uses: github/codeql-action/analyze@v3

      - name: Bump version
        id: bump
        run: |
          chmod +x scripts/bump_version.sh
          newver=$(./scripts/bump_version.sh | grep "New version" | awk '{print $3}')
          echo "version=$newver" >> $GITHUB_OUTPUT

      - name: AI Summary
        run: |
          echo "AI Summary: (Mock) Summarizing changes in main..."
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Images for Multiple Architectures
        run: |
          REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          VERSION=${{ steps.bump.outputs.version }}
          
          echo "Building for amd64..."
          docker buildx build --platform linux/amd64 --load -t ghcr.io/$REPO:main-${VERSION}-amd64 .
          
          echo "Building for arm64..."
          docker buildx build --platform linux/arm64 --load -t ghcr.io/$REPO:main-${VERSION}-arm64 .
          
          # Create a multi-architecture manifest image
          docker buildx build --platform linux/amd64,linux/arm64 --push -t ghcr.io/$REPO:main-${VERSION} .
          
          # Tag the multi-arch manifest as latest
          docker tag ghcr.io/$REPO:main-${VERSION} ghcr.io/$REPO:latest

      - name: Login to GHCR
        run: |
          # If necessary, replace GITHUB_TOKEN with your PAT secret (e.g., CR_PAT)
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Architecture-Specific Images
        run: |
          REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          VERSION=${{ steps.bump.outputs.version }}
          
          docker push ghcr.io/$REPO:main-${VERSION}-amd64
          docker push ghcr.io/$REPO:main-${VERSION}-arm64
          docker push ghcr.io/$REPO:main-${VERSION}
          docker push ghcr.io/$REPO:latest
